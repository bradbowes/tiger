let

   type int_array = array of int
   type matrix = array of int_array

   primes = int_array[8] of 0   
   number = matrix[20] of nil
   total = int_array[8] of 0

   the_total = 1

   power(m: int, n: int): int = 
      let
         t = if n = 0 then 0 else 1
      in
         for i := 1 to n do
            t := t * m
         end
         t
      end
      

   expt(m: int, n: int): int =
      if m mod n = 0 then
         expt(m / n, n) + 1
      else
         0
    
in
   primes[0] := 2
   primes[1] := 3
   primes[2] := 5
   primes[3] := 7
   primes[4] := 11
   primes[5] := 13
   primes[6] := 17
   primes[7] := 19
   
   for i := 0 to 19 do
      number[i] := int_array[8] of 0
      for j := 0 to 7 do
         if (i + 1) mod primes[j] = 0 then
            number[i][j] := expt(i + 1, primes[j])
      end
   end
      
   for i := 0 to 19 do
      for j := 0 to 7 do
         if total[j] < number[i][j] then
            total[j] := number[i][j]
      end
   end

   for i := 0 to 7 do
      the_total := the_total * power(primes[i], total[i])
   end

   print(str(the_total))

end
